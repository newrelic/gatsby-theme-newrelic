name: Release Feature Branch

on:
  push:
    branches:
      - feature/newrelic-io

env:
  BOT_NAME: nr-opensource-bot
  BOT_EMAIL: opensource+bot@newrelic.com

jobs:
  generate-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          # Ensure lerna can do the proper version bump
          # https://github.com/lerna/lerna/issues/2542
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache Gatsby build
        uses: actions/cache@v2
        with:
          path: |
            demo/public
            demo/.cache
          key: ${{ runner.os }}-gatsby-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Configure NPM
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > .npmrc

      - name: Test Build
        run: yarn workspace demo build --log-pages
        env:
          GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES: true
          CI: true

      - name: Lerna Publish
        env:
          GIT_AUTHOR_NAME: ${{ env.BOT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ env.BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ env.BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ env.BOT_EMAIL }}
          GH_TOKEN: ${{ secrets.DEVEX_OPENSOURCE_BOT_TOKEN }}
        run: yarn release --tag-version-prefix='newrelic-io'
